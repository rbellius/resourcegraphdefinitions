#apiVersion: kro.run/v1alpha1
#kind: ResourceGraphDefinition
#metadata:
#  name: ingress-definition
#spec:
#  schema:
#    apiVersion: v1alpha1
#    kind: IngressRequest
#    spec:
   
#      domain: string
#      subdomain: string
#      serviceName: string
#      servicePort: integer | default=80

#      networkStack: string | default="network-stack-definition"
#      ingressClass: string | default="traefik"

#      env: string | default="staging"

#  resources:
#    - id: ingress
#      template:
#        apiVersion: networking.k8s.io/v1
#        kind: Ingress
#        metadata:
#          name: ${schema.metadata.name}
#          namespace: ${schema.metadata.namespace}
#          annotations:
#            cert-manager.io/cluster-issuer: cert-manager-webhook-duckdns-${schema.spec.env}
#            # cert-manager.io/cluster-issuer: acme-issuer-{{ .Values.env }}
#            # external-dns.alpha.kubernetes.io/hostname: '{{ .Values.subdomain | default .Values.name }}.{{ .Values.domain }}'
#            # external-dns.alpha.kubernetes.io/target: 192.168.12.184

#        spec: 
#          ingressClassName: ${schema.spec.ingressClass}

      
#          tls:
#          - secretName: cert-${schema.spec.env}
#            hosts:
#              - '*.${schema.spec.domain}'

 #         rules:
 #         - host: '${schema.spec.subdomain}.${schema.spec.domain}'
 #           http:
 #             paths:
 #             - path: /
 #               pathType: Prefix
 #               backend:
 #                 service:
 #                   name: ${schema.spec.serviceName}
 #                   port:
 #                     number: ${schema.spec.servicePort}
