apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: gitea-chart
  annotations:
    argocd.argoproj.io/instance: gitea-chart
  finalizers:
    - resources-finalizer.argocd.argoproj.io/foreground
spec:
  schema:
    apiVersion: v1alpha1
    kind: GiteaChart
    spec:
      chart: string | default="gitea" enum="gitea"
      env: string | default="staging" enum="staging,production"


  resources:
    - id: giteaChart
      # readyWhen:
      #   - ${homepageChart.status.condition.status}
      template:
        apiVersion: kro.run/v1alpha1
        kind: Argofile
        metadata:
          name: gitea
          namespace: argocd

        spec:
          applications: 

            # Future plans:
            ## Make these generic and move them into a file a gitgenerator can pull, with everything disabled by default
            ## Then use the list generator to merge with instance spec that overrides any default values. 
            ## Each chart can be enabled by setting enabled: true for that named item. 
            - name: gitea-chart
              enabled: true
              hook: PreSync
              sync:
                createNamespace: true
              destination:
                namespace: gitea
              source:
                repoURL: oci://docker.gitea.com/charts/gitea
                targetRevision: 12.0.0
                path: .
                values: |
                  crds:
                    create: true

                  gitea:
                    config:
                      database:
                        DB_TYPE: sqlite3
                      session:
                        PROVIDER: memory
                      cache:
                        ADAPTER: memory
                      queue:
                        TYPE: level
                        
                  valkey:
                    enabled: true
                    architecture: standalone

                  postgresql:
                    enabled: true

                  postgresql-ha:
                    enabled: false

                  valkey-cluster:
                    enabled: false


    - id: giteaIngressRequest
      template:
          apiVersion: kro.run/v1alpha1
          kind: IngressRequest
          metadata:
            name: gitea
            namespace: gitea
            annotations:
              argocd.argoproj.io/instance: gitea
              argocd.argoproj.io/tracking-id: ${schema.metadata.?annotations["argocd.argoproj.io/tracking-id"]}        
          spec:
            env: ${schema.spec.env}
            subdomain: gitea
            service:
              name: gitea




    # - name: gitea
    #   enabled: false
    #   hook: PreSync
    #   sync:
    #     createNamespace: true
    #   destination:
    #     namespace: gitea
    #   source:
    #     repoURL: oci://docker.gitea.com/charts/gitea
    #     targetRevision: 12.0.0
    #     path: .
    #     values: |
    #       crds:
    #         create: true

    #       gitea:
    #         config:
    #           database:
    #             DB_TYPE: sqlite3
    #           session:
    #             PROVIDER: memory
    #           cache:
    #             ADAPTER: memory
    #           queue:
    #             TYPE: level
                 
    #       valkey:
    #         enabled: true
    #         architecture: standalone

    #       postgresql:
    #         enabled: true

    #       postgresql-ha:
    #         enabled: false

    #       valkey-cluster:
    #         enabled: false