apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: mikrolab
  namespace: mikrolab
  annotations:
    argocd.argoproj.io/instance: mikrolab
  labels:
    app.kubernetes.io/name: mikrolab
    app.kubernetes.io/instance: mikrolab
    app.kubernetes.io/component: infrastructure
    app.kubernetes.io/part-of: mikrolab
    # app.kubernetes.io/managed-by: argocd ## will this be tracked my argocd?

spec:
  schema:
    apiVersion: v1alpha1
    kind: MikroLab
    spec:
   
      env: string | default="staging" enum="staging,production"

      ingress:
        class: string | default="traefik" enum="traefik"
 
      certmanager:
        enabled: boolean | default=true
        provider: string | default="duckdns" enum="duckdns,cloudflare"
        domain: string  
        email: string

  
    # status:

      # certmanager:
      #   resources: ${certManagerBundle.status.operationState.syncResult.resources}
      #   healthy: ${certManagerRGDApplication.status.health.status}
      #   synced: ${certManagerRGDApplication.status.sync.status}  

  resources:

    - id: createNamespace
      template:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: cert-manager


    - id: certManagerBundle
      includeWhen:
        - ${schema.spec.certmanager.enabled}
      template:
          apiVersion: kro.run/v1alpha1
          kind: CertManagerBundle
          metadata:
            name: cert-manager-bundle
            namespace: cert-manager
            annotations:
              argocd.argoproj.io/instance: cert-manager-bundle
          spec:
            env: ${schema.spec.env}
            ingress:
              requests: true
            dns:
              providers: 
                duckdns:
                  enabled: ${schema.spec.certmanager.provider == "duckdns"}
                  email: ${schema.spec.certmanager.email} 
                  domain: ${schema.spec.certmanager.domain}
                  dynamic: true
                # cloudflare:
                #   enabled: false
                #   email: eddie.moya@gmail.com
                #   domain: cloudbreaker.me
                builtin:
                  enabled: ${schema.spec.certmanager.provider == "cloudflare"}
                  provider: cloudflare
                  email: ${schema.spec.certmanager.email}
                  domain: ${schema.spec.certmanager.domain}
                default:
                  provider: ${schema.spec.certmanager.provider}
                  domain: ${schema.spec.certmanager.domain}

  
    - id: argocdIngressRequest
      template:
          apiVersion: kro.run/v1alpha1
          kind: IngressRequest
          metadata:
            name: argocd
            namespace: argocd
            annotations:
              argocd.argoproj.io/instance: argocd-ingress          
          spec:
            env: ${schema.spec.env}
            subdomain: argocd
            service:
              name: argocd-server